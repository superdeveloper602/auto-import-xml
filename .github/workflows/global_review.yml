name: Auto Global Review

on:
  schedule:
    - cron: '0 3 * * 6'  # Runs at 3 AM UTC every Saturday
  workflow_dispatch:  # Allows manual triggering of the workflow

jobs:
  retrieve-data:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install PostgreSQL client
        run: sudo apt-get install -y postgresql-client

      - name: Retrieve data from PostgreSQL
        env:
          DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
        run: |
          psql "postgres://postgres.fbsstbcuoxstmqjgqdwy:${DATABASE_PASSWORD}@aws-0-us-west-1.pooler.supabase.com:5432/postgres" -c "\COPY (SELECT * FROM get_weekly_reviews()) TO 'reviews.csv' WITH (FORMAT csv, DELIMITER '~');"
      - name: Upload reviews.csv to artifacts
        uses: actions/upload-artifact@v3
        with:
          name: reviews
          path: reviews.csv

  process-data:
    needs: retrieve-data
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download reviews.csv from artifacts
        uses: actions/download-artifact@v3
        with:
          name: reviews
          path: ./  # Downloads to the root of the runner's workspace

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run data processing script
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: python global_review.py

      - name: Upload processed files to artifacts
        uses: actions/upload-artifact@v3
        with:
          name: processed-csv
          path: article_summary.csv
  send-data-to-email:
    needs: process-data
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download articles_summary.csv from artifacts
        uses: actions/download-artifact@v3
        with:
          name: processed-csv
          path: ./  # Downloads to the root of the runner's workspace

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Send email
        env:
          MAILTRAP_SERVER: ${{ secrets.MAILTRAP_SERVER }}
          MAILTRAP_USERNAME: ${{ secrets.MAILTRAP_USERNAME }}
          MAILTRAP_PASSWORD: ${{ secrets.MAILTRAP_PASSWORD }}
          MAIL_PORT: ${{ secrets.MAIL_PORT }}
          FROM_EMAIL: ${{ secrets.FROM_EMAIL }}
          TO_EMAIL: ${{ secrets.TO_EMAIL }}
        run: python send_mail.py
