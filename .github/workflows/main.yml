name: auto-import
on:
  schedule:
    - cron: '0 3 * * 6'  # Runs at 3 AM UTC every Saturday
  workflow_dispatch:  # Allows manual triggering of the workflow

jobs:
  fetch_files:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Download files from FTP server
        env:
          FTP_SERVER: ${{ secrets.FTP_SERVER }}
          FTP_USERNAME: ${{ secrets.FTP_USERNAME }}
          FTP_PASSWORD: ${{ secrets.FTP_PASSWORD }}
          XML_FILE_PATH: ${{ secrets.XML_FOLDER_PATH }}
          IS_TESTING: ${{ secrets.IS_TESTING }}
        run: python download_file_from_ftp.py

      - name: Archive data folder
        uses: actions/upload-artifact@v2
        with:
          name: data-folder
          path: data/

  prepare_data:
    needs: fetch_files
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Download archived data folder
        uses: actions/download-artifact@v2
        with:
          name: data-folder
          path: data

      - name: Generate CSV file
        run: python auto-import-script.py

      - name: Archive CSV file
        uses: actions/upload-artifact@v2
        with:
          name: temp-csv
          path: temp_data.csv

  import_data:
    needs: prepare_data
    runs-on: ubuntu-latest
    container: gradle:jdk11
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download archived CSV file
        uses: actions/download-artifact@v2
        with:
          name: temp-csv
          path: .  # Downloads to current directory
        
      - name: Install PostgreSQL client
        run: |
          apt-get update
          apt-get install -y postgresql-client

      - name: Copy data into PostgreSQL
        env:
          DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
        run: |
          psql "postgres://postgres.fbsstbcuoxstmqjgqdwy:${DATABASE_PASSWORD}@aws-0-us-west-1.pooler.supabase.com:5432/postgres" -c "\COPY public.articles(title, content, issue_date) FROM 'temp_data.csv' WITH (FORMAT csv, DELIMITER '~');"
